

/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */
#include<stdio.h>
#include"xparameters.h"
#include"xil_io.h"
#include"xuartlite_l.h"
#include"xuartps_hw.h"

#define uchar unsigned char
#define uint unsigned short


#define UART_1_DEVICE_ID 0xE0001000

char uart1_intbyte(void){

	return XUartPs_RecvByte(UART_1_DEVICE_ID);
}

void uart1_outbyte(char c){
	 XUartPs_SendByte(UART_1_DEVICE_ID,c);

}

static void delay(int dly){

	int i,j;
	for(i=0;i<dly;i++){
		for(j=0;j<0xffff;j++){
		   ;
		}

	}
}
void print1(const char *ptr){

	while(*ptr){
		XUartPs_SendByte(UART_1_DEVICE_ID,*ptr++);
		//delay(1233);

	}
}
int main(){
	uchar rxdb;
	print1("helloworld!fdsffdsfdsfd\n");
	XUartLite_SetControlReg(XPAR_UARTLITE_0_BASEADDR,0x10);
	XUartLite_SetControlReg(XPAR_UARTLITE_1_BASEADDR,0x10);
	unsigned int  * bramptr=0x40000000;
	/*for(int i=150;i<240;i++){
		bramptr[i]=i;
	}*/
    int word ,j=0;
	for(int i=0;i<4096;i++){
		word=Xil_In32(XPAR_AXI_BRAM_CTRL_0_S_AXI_BASEADDR+j);
		xil_printf("bram[%d]=%08x\n\r",i,word);
		j=j+4;
	}


while(1){

	//rxdb=uart1_intbyte();
	//XUartLite_SendByte(XPAR_UARTLITE_0_BASEADDR,rxdb);
	//rxdb=XUartLite_RecvByte(XPAR_UARTLITE_1_BASEADDR);
	//XUartLite_SendByte(XPAR_UARTLITE_1_BASEADDR,rxdb);
	rxdb=XUartLite_RecvByte(XPAR_UARTLITE_0_BASEADDR);
	uart1_outbyte(rxdb);
}
return 0;

}



